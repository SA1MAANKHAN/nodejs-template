{"swagger":"2.0","info":{"version":"1.0.0","title":"Node.JS Application","description":"Project","termsOfService":"http://swagger.io/terms/","contact":{"name":"Node.JS Team"},"license":{"name":"MIT"}},"paths":{"/v1/file/upload":{"post":{"tags":["File"],"summary":"Route to upload a file","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"File uploaded successfully.","data":"https://d2k2rpt0lk7syj.cloudfront.net/test/chat_1648710480510.png"},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"400":{"schema":{"type":"object","example":{"status":false,"statusCode":400,"type":"BAD_REQUEST","message":"groupId is required."},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"formData","name":"file","type":"file","description":"Single file"},{"in":"formData","name":"fileName","type":"string","description":"name of the file"},{"in":"formData","name":"type","type":"number","format":"float","enum":[1,2],"description":"1 -> profile, 2-> chat media"},{"in":"formData","name":"groupId","anyOf":[{"type":"string","description":"Group/Room unique Id","x-required":true}]},{"in":"formData","name":"index","type":"string","description":"uploading file index"}]}},"/v1/testServer":{"get":{"tags":["TEST"],"summary":"Route to check server is working fine or not?","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Server is working fine."},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[]}},"/v1/testEmail":{"post":{"tags":["TEST"],"summary":"Route to test email","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success."},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/TEST_EMAIL"}}]}},"/v1/testAuth":{"get":{"tags":["TEST"],"summary":"Route to user auth example","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success."},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/user/login":{"post":{"tags":["USER"],"summary":"Route to login a user using Ethereum wallet address.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"SUCCESS","message":"Logged in successfully.","data":{"user":{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"},"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MmE4N2MzYzRhZDQyNjIxNDg1ZDFlMWYiLCJzZXNzaW9uSWQiOiI2MWVkNWY1OS1kMTUxLTQzYmEtOWNkOS1mMDMwMWY5ZTNjYjUiLCJkYXRlIjoxNjU1ODk0MjYyOTA4LCJpYXQiOjE2NTU4OTQyNjJ9.PymOWnUrI1ZUDrfxsIDBMjgHjG0hezlGhTu673VEL0I"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"400":{"schema":{"type":"object","example":{"status":false,"statusCode":400,"type":"BAD_REQUEST","message":"publicAddress must be a valid ethereum addresses."},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/Register"}}]}},"/v2/user/login":{"post":{"tags":["USER"],"summary":"Route to login a user using Ethereum wallet address.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"SUCCESS","message":"Logged in successfully.","data":{"user":{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"},"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MmE4N2MzYzRhZDQyNjIxNDg1ZDFlMWYiLCJzZXNzaW9uSWQiOiI2MWVkNWY1OS1kMTUxLTQzYmEtOWNkOS1mMDMwMWY5ZTNjYjUiLCJkYXRlIjoxNjU1ODk0MjYyOTA4LCJpYXQiOjE2NTU4OTQyNjJ9.PymOWnUrI1ZUDrfxsIDBMjgHjG0hezlGhTu673VEL0I"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"400":{"schema":{"type":"object","example":{"status":false,"statusCode":400,"type":"BAD_REQUEST","message":"publicAddress must be a valid ethereum addresses."},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/RegisterWithMetamask"}}]}},"/v1/user":{"put":{"tags":["USER"],"summary":"Route to update a user.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Updated  successfully.","data":{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/UpdateUser"}},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]},"get":{"tags":["USER"],"summary":"Route to get user profile.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success.","data":{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"query","name":"id","type":"string","description":"user database id."},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]},"delete":{"tags":["USER"],"summary":"Route to delete own account.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success."},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/users":{"get":{"tags":["USER"],"summary":"Route to all user profiles or users that match username regex.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success.","data":[{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"}]},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"query","name":"username","type":"string","description":"Username"},{"in":"query","name":"limit","type":"number","format":"float","description":"limit","default":10},{"in":"query","name":"skip","type":"number","format":"float","description":"skip"},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/user/privacy/profileVisible":{"put":{"tags":["USER"],"summary":"Route to update user profile visible to.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Updated  successfully.","data":{"_id":"61fba617f4f70d6c0b3eff58","username":"","profileImage":"default.png","biography":"this is user biography in multiple line"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/ProfileVisible"}},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/user/check":{"get":{"tags":["USER"],"summary":"Route to find out user by username.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"SUCCESS","message":"Success.","data":{"available":true}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"query","name":"username","type":"string","description":"Username","required":true},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/user/deviceToken":{"put":{"tags":["USER"],"summary":"Route to send device token for notifications.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"Default","message":"Success."},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/UserDeviceToken"}},{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}},"/v1/user/qr":{"get":{"tags":["USER"],"summary":"Route to profile qr of a user.","responses":{"200":{"schema":{"type":"object","example":{"status":true,"statusCode":200,"type":"SUCCESS","message":"Success.","data":{"shortLink":"https://mejhoolapp.page.link/zBWC5Z3J6awquUtYA","previewLink":"https://mejhoolapp.page.link/zBWC5Z3J6awquUtYA?d=1"}},"properties":{"statusCode":{"type":"integer","format":"int32","example":200}}}},"401":{"schema":{"type":"object","example":{"status":false,"statusCode":401,"type":"UNAUTHORIZED","message":"Unauthorized access!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":401}}}},"500":{"schema":{"type":"object","example":{"status":true,"statusCode":500,"type":"INTERNAL_SERVER_ERROR","message":"Internal server error!"},"properties":{"statusCode":{"type":"integer","format":"int32","example":500}}}}},"parameters":[{"in":"header","name":"authorization","type":"string","description":"User's JWT token.","required":true}]}}},"definitions":{"TEST_EMAIL":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"user's email"}},"additionalProperties":false},"Register":{"type":"object","properties":{"publicAddress":{"type":"string","description":"Ethereum wallet addresses must check for a leading 0x followed by a random string of 40 hexadecimal characters (lowercase a-f, uppercase A-F, and numbers 0-9). This is not case sensitive."}},"required":["publicAddress"],"additionalProperties":false},"RegisterWithMetamask":{"type":"object","properties":{"signature":{"type":"string","description":"A signature of users public address signed with metamask."},"message":{"type":"string","description":"A public address that was used to generate the signature."}},"required":["signature","message"],"additionalProperties":false},"UpdateUser":{"type":"object","properties":{"username":{"type":"string","description":"User's username."},"profileImage":{"type":"string","description":"profile image url"},"biography":{"type":"string","description":"biography of user"}},"additionalProperties":false},"ProfileVisible":{"type":"object","properties":{"action":{"type":"string","enum":["add","remove","replace"],"description":"action"},"users":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"string","description":"user db id"},"username":{"type":"string"}},"required":["username"],"additionalProperties":false}}},"additionalProperties":false},"UserDeviceToken":{"type":"object","properties":{"token":{"type":"string","description":"Device token."}},"required":["token"],"additionalProperties":false}},"schemes":["http","https"],"consumes":["application/json"],"produces":["application/json"],"securityDefinitions":{"apiKey":{"type":"apiKey","in":"header","name":"X-API-KEY"}},"security":[{"apiKey":[]}]}